// Bootstrap overrides
.container {
  max-width: $site_width + map-get($gutters, xl) * 2;
  padding-left: map-get($gutters, xl);
  padding-right: map-get($gutters, xl);
}

@media(max-width: $breakpoint_lg) {
  .container {
    max-width: $site_width + map-get($gutters, lg);
    padding-left: map-get($gutters, lg) / 2;
    padding-right: map-get($gutters, lg) / 2;
  }
}

@media(max-width: $breakpoint_md) {
  .container {
    max-width: $site_width + map-get($gutters, md);
    padding-left: map-get($gutters, md) / 2;
    padding-right: map-get($gutters, md) / 2;
  }
}

@media(max-width: $breakpoint_sm) {
  .container {
    max-width: $site_width + map-get($gutters, sm);
    padding-left: map-get($gutters, sm) / 2;
    padding-right: map-get($gutters, sm) / 2;
  }
}



.row {
  margin-left: - map-get($gutters, xl) / 2;
  margin-right: - map-get($gutters, xl) / 2;
}

@media(max-width: $breakpoint_lg) {
  .row {
    margin-left: - map-get($gutters, lg) / 2;
    margin-right: - map-get($gutters, lg) / 2;
  }
}

@media(max-width: $breakpoint_md) {
  .row {
    margin-left: - map-get($gutters, md) / 2;
    margin-right: - map-get($gutters, md) / 2;
  }
}

@media(max-width: $breakpoint_sm) {
  .row {
    margin-left: - map-get($gutters, sm) / 2;
    margin-right: - map-get($gutters, sm) / 2;
  }
}



.col-1, .col-2, .col-3, .col-4, .col-5, .col-6, .col-7, .col-8, .col-9, .col-10, .col-11, .col-12, .col, .col-auto, .col-sm-1, .col-sm-2, .col-sm-3, .col-sm-4, .col-sm-5, .col-sm-6, .col-sm-7, .col-sm-8, .col-sm-9, .col-sm-10, .col-sm-11, .col-sm-12, .col-sm, .col-sm-auto, .col-md-1, .col-md-2, .col-md-3, .col-md-4, .col-md-5, .col-md-6, .col-md-7, .col-md-8, .col-md-9, .col-md-10, .col-md-11, .col-md-12, .col-md, .col-md-auto, .col-lg-1, .col-lg-2, .col-lg-3, .col-lg-4, .col-lg-5, .col-lg-6, .col-lg-7, .col-lg-8, .col-lg-9, .col-lg-10, .col-lg-11, .col-lg-12, .col-lg, .col-lg-auto, .col-xl-1, .col-xl-2, .col-xl-3, .col-xl-4, .col-xl-5, .col-xl-6, .col-xl-7, .col-xl-8, .col-xl-9, .col-xl-10, .col-xl-11, .col-xl-12, .col-xl, .col-xl-auto {
  padding-left: map-get($gutters, xl) / 2;
  padding-right: map-get($gutters, xl) / 2;
}

@media(max-width: $breakpoint_lg) {
  .col-1, .col-2, .col-3, .col-4, .col-5, .col-6, .col-7, .col-8, .col-9, .col-10, .col-11, .col-12, .col, .col-auto, .col-sm-1, .col-sm-2, .col-sm-3, .col-sm-4, .col-sm-5, .col-sm-6, .col-sm-7, .col-sm-8, .col-sm-9, .col-sm-10, .col-sm-11, .col-sm-12, .col-sm, .col-sm-auto, .col-md-1, .col-md-2, .col-md-3, .col-md-4, .col-md-5, .col-md-6, .col-md-7, .col-md-8, .col-md-9, .col-md-10, .col-md-11, .col-md-12, .col-md, .col-md-auto, .col-lg-1, .col-lg-2, .col-lg-3, .col-lg-4, .col-lg-5, .col-lg-6, .col-lg-7, .col-lg-8, .col-lg-9, .col-lg-10, .col-lg-11, .col-lg-12, .col-lg, .col-lg-auto, .col-xl-1, .col-xl-2, .col-xl-3, .col-xl-4, .col-xl-5, .col-xl-6, .col-xl-7, .col-xl-8, .col-xl-9, .col-xl-10, .col-xl-11, .col-xl-12, .col-xl, .col-xl-auto {
    padding-left: map-get($gutters, lg) / 2;
    padding-right: map-get($gutters, lg) / 2;
  }
}

@media(max-width: $breakpoint_md) {
  .col-1, .col-2, .col-3, .col-4, .col-5, .col-6, .col-7, .col-8, .col-9, .col-10, .col-11, .col-12, .col, .col-auto, .col-sm-1, .col-sm-2, .col-sm-3, .col-sm-4, .col-sm-5, .col-sm-6, .col-sm-7, .col-sm-8, .col-sm-9, .col-sm-10, .col-sm-11, .col-sm-12, .col-sm, .col-sm-auto, .col-md-1, .col-md-2, .col-md-3, .col-md-4, .col-md-5, .col-md-6, .col-md-7, .col-md-8, .col-md-9, .col-md-10, .col-md-11, .col-md-12, .col-md, .col-md-auto, .col-lg-1, .col-lg-2, .col-lg-3, .col-lg-4, .col-lg-5, .col-lg-6, .col-lg-7, .col-lg-8, .col-lg-9, .col-lg-10, .col-lg-11, .col-lg-12, .col-lg, .col-lg-auto, .col-xl-1, .col-xl-2, .col-xl-3, .col-xl-4, .col-xl-5, .col-xl-6, .col-xl-7, .col-xl-8, .col-xl-9, .col-xl-10, .col-xl-11, .col-xl-12, .col-xl, .col-xl-auto {
    padding-left: map-get($gutters, md) / 2;
    padding-right: map-get($gutters, md) / 2;
  }
}

@media(max-width: $breakpoint_sm) {
  .col-1, .col-2, .col-3, .col-4, .col-5, .col-6, .col-7, .col-8, .col-9, .col-10, .col-11, .col-12, .col, .col-auto, .col-sm-1, .col-sm-2, .col-sm-3, .col-sm-4, .col-sm-5, .col-sm-6, .col-sm-7, .col-sm-8, .col-sm-9, .col-sm-10, .col-sm-11, .col-sm-12, .col-sm, .col-sm-auto, .col-md-1, .col-md-2, .col-md-3, .col-md-4, .col-md-5, .col-md-6, .col-md-7, .col-md-8, .col-md-9, .col-md-10, .col-md-11, .col-md-12, .col-md, .col-md-auto, .col-lg-1, .col-lg-2, .col-lg-3, .col-lg-4, .col-lg-5, .col-lg-6, .col-lg-7, .col-lg-8, .col-lg-9, .col-lg-10, .col-lg-11, .col-lg-12, .col-lg, .col-lg-auto, .col-xl-1, .col-xl-2, .col-xl-3, .col-xl-4, .col-xl-5, .col-xl-6, .col-xl-7, .col-xl-8, .col-xl-9, .col-xl-10, .col-xl-11, .col-xl-12, .col-xl, .col-xl-auto {
    padding-left: map-get($gutters, sm) / 2;
    padding-right: map-get($gutters, sm) / 2;
  }
}

/* Layout */
.h-100 { height: 100%; }
.h-100v { height: 100vh; }

@media(min-width: map-get($breakpoints, lg)) {
  .h-100v-lg { height: 100vh; }
}

@media(min-width: map-get($breakpoints, md)) and (max-width: $breakpoint_lg) {
  .h-100v-md { height: 100vh; }
}

@media(max-width: $breakpoint_md) {
  .h-100v-sm { height: 100vh; }
}


// Flexbox positioning
.flex-c-column {
  display: flex;
  justify-content: center;
  align-items: center;
  flex-direction: column;    
}
.flex-t-column {
  display: flex;
  justify-content: flex-start;
  align-content: flex-start;
  align-items: flex-start;
  flex-direction: column;
  flex-wrap: wrap; 
}
.flex-y-c {
  display: flex;
  align-items: center;
}
.flex-y-b {
  display: flex;
  align-items: flex-end;
  flex-wrap: wrap;   
}
.flex-x-r {
  display: flex;
  justify-content: flex-end;
  flex-wrap: wrap;
}
.flex-x-c {
  display: flex;
  justify-content: center;
  flex-wrap: wrap;
}
.flex-grow { flex-grow: 1; }
.m-l-auto { margin-left: auto; }

.flex-x-sb { justify-content: space-between; }

// Block positioning
.block-fit-parent {
  position: absolute;
  display: block;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
}
.block-c {
  position: absolute;
  display: block;
  top: 50%;
  right: auto;
  bottom: auto;
  left: 50%;
  transform: translate(-50%,-50%);   
}
.block-y-c {
  position: absolute;
  display: block;
  top: 50%;
  bottom: auto;
  transform: translateY(-50%);   
}
.block-y-b {
  position: absolute;
  display: block;
  top: auto;
  bottom: 0;
}
.block-x-c {
  position: absolute;
  display: block;
  right: auto;
  left: 50%;
  transform: translateX(-50%);   
}
.block-x-right {
  position: absolute;
  display: block;
  right: 0;
  left: auto;
}
.margin-auto,
.row .margin-auto.row {
  margin-right: auto;
  margin-left: auto;
}
.contained-child {
  max-width: 100%;
  max-height: 100%;
}

// Floating
.pull-left { float: left !important; }
.pull-right { float: right !important; }
.float-none { float: none !important; }
@media(min-width: map-get($breakpoints, xl)) {
  .pull-left-xl { float: left !important; }
  .pull-right-xl { float: right !important; }
  .float-none-xl { float: none !important; }
}
@media(min-width: map-get($breakpoints, lg)) and (max-width: map-get($breakpoints, xl) - 1) {
  .pull-left-lg { float: left !important; }
  .pull-right-lg { float: right !important; }
  .float-none-lg { float: none !important; }
}
@media(min-width: map-get($breakpoints, md)) and (max-width: map-get($breakpoints, lg) - 1) {
  .pull-left-md { float: left !important; }
  .pull-right-md { float: right !important; }
  .float-none-md { float: none !important; }
}
@media(min-width: map-get($breakpoints, sm)) and (max-width: map-get($breakpoints, md) - 1) {
  .pull-left-sm { float: left !important; }
  .pull-right-sm { float: right !important; }
  .float-none-sm { float: none !important; }
}
@media(max-width: map-get($breakpoints, sm) - 1) {
  .pull-left-xs { float: left !important; }
  .pull-right-xs { float: right !important; }
  .float-none-xs { float: none !important; }
}

//Position
.relative { position: relative; }
.absolute { position: absolute; }

// Display
.flex {
  display: flex;
  flex-direction: row;
  flex-wrap: wrap;
}
.flex-reverse { flex-direction: row-reverse; }
.flex-nowrap { flex-wrap: nowrap !important; }
.flex-important { display: flex !important; }
.flex-inline {
  display: inline-flex;
  flex-direction: row;
  flex-wrap: wrap;
}
.flex-inline-important { display: inline-flex !important; }
.block { display: block; }
.block-important { display: block !important; }
.inline-block { display: inline-block; }
.inline-block-important { display: inline-block !important; }
.inline { display: inline; }
.inline-important { display: inline !important; }

// Hide and show
.hide { display: none !important; }
.show { display: block !important; }
@media(min-width: map-get($breakpoints, xl)) {
  .hide-xl { display: none !important; }
  .show-xl { display: block !important; }
}
@media(min-width: map-get($breakpoints, lg)) and (max-width: map-get($breakpoints, xl) - 1) {
  .hide-lg { display: none !important; }
  .show-lg { display: block !important; }
}
@media(min-width: map-get($breakpoints, md)) and (max-width: map-get($breakpoints, lg) - 1) {
  .hide-md { display: none !important; }
  .show-md { display: block !important; }
}
@media(min-width: map-get($breakpoints, sm)) and (max-width: map-get($breakpoints, md) - 1) {
  .hide-sm { display: none !important; }
  .show-sm { display: block !important; }
}
@media(max-width: map-get($breakpoints, sm) - 1) {
  .hide-xs { display: none !important; }
  .show-xs { display: block !important; }
}

// Visibility
.visually-hidden {
    position: absolute;
    opacity: 0;
    pointer-events: none;
}
.visually-shown {
    position: initial;
    opacity: initial;
    pointer-events: initial;  
}
.visually-hidden.focusable:active,
.visually-hidden.focusable:focus {
    clip: auto;
    clip-path: none;
    height: auto;
    margin: 0;
    overflow: visible;
    position: static;
    width: auto;
    white-space: inherit;
}

// Clearfix
.clearfix:before,
.clearfix:after {
    content: " "; /* 1 */
    display: table; /* 2 */
}
.clearfix:after { clear: both; }
.clearfix { *zoom:1; }

// Remove max-width and min-width
.max-w-none { max-width: none !important; }
.min-w-0 { min-width: 0 !important; }
@media(min-width: map-get($breakpoints, xl)) {
  .max-w-none-xl { max-width: none !important; }
  .min-w-0-xl { min-width: 0 !important; }
}
@media(min-width: map-get($breakpoints, lg)) and (max-width: map-get($breakpoints, xl) - 1) {
  .max-w-none-lg { max-width: none !important; }
  .min-w-0-lg { min-width: 0 !important; }
}
@media(min-width: map-get($breakpoints, md)) and (max-width: map-get($breakpoints, lg) - 1) {
  .max-w-none-md { max-width: none !important; }
  .min-w-0-md { min-width: 0 !important; }
}
@media(min-width: map-get($breakpoints, sm)) and (max-width: map-get($breakpoints, md) - 1) {
  .max-w-none-sm { max-width: none !important; }
  .min-w-0-sm { min-width: 0 !important; }
}
@media(max-width: map-get($breakpoints, sm) - 1) {
  .max-w-none-xs { max-width: none !important; }
  .min-w-0-xs { min-width: 0 !important; }
}
